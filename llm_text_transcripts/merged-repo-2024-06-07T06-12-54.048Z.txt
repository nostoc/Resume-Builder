
D:\DATA\DEV\EAZY-REZUME\BACKEND\.ENV CODE IS BELOW
PORT = 5000
MONGO_URL = "mongodb+srv://nostochk:j15hgywfyJxkDmmh@cluster0.mefxs23.mongodb.net/easy-resume?retryWrites=true&w=majority&appName=Cluster0"


D:\DATA\DEV\EAZY-REZUME\BACKEND\CONFIG.JS CODE IS BELOW
export const PORT = 3000;
export const MONGO_URL = "mongodb+srv://nostochk:j15hgywfyJxkDmmh@cluster0.mefxs23.mongodb.net/easy-resume?retryWrites=true&w=majority&appName=Cluster0";

D:\DATA\DEV\EAZY-REZUME\BACKEND\CONTROLLERS\AUTHCONTOLLER.JS CODE IS BELOW
import { User } from "../models/UserModel.js";
import { createSecretToken } from "../util/SecretToken.js";
import bcrypt from "bcryptjs";

export const Signup = async (req, res, next) => {
  try {
    const { email, password, username, createdAt } = req.body;
    const existingUser = await User.findOne({ email });
    if (existingUser) {
      return res.json({ message: "User already exixts" });
    }

    const user = await User.create({ mail, password, username, createdAt });
    const token = createSecretToken(user._id);
    res.cookie("token", token, {
      withCredentials: true,
      httpOnly: false,
    });
    res
      .status(201)
      .json({ message: "User signed in successfully", success: true, User });
    next();
  } catch (error) {
    console.error(error);
  }
};


D:\DATA\DEV\EAZY-REZUME\BACKEND\MODELS\RESUMEMODEL.JS CODE IS BELOW
// backend/models/Resume.js
import mongoose from "mongoose";

//const Schema = mongoose.Schema;

const ExperienceSchema = new Schema({
  company: { type: String, required: true },
  position: { type: String, required: true },
  startDate: { type: Date, required: true },
  endDate: { type: Date },
  description: { type: String },
});

const EducationSchema = new Schema({
  institution: { type: String, required: true },
  degree: { type: String, required: true },
  fieldOfStudy: { type: String },
  startDate: { type: Date, required: true },
  endDate: { type: Date },
});

const ProjectSchema = new Schema({
  name: { type: String, required: true },
  description: { type: String },
  technologies: [String],
});

const CertificationSchema = new Schema({
  name: { type: String, required: true },
  institution: { type: String },
  date: { type: Date },
});

const ResumeSchema = new Schema({
  userId: {
    type: mongoose.Schema.Types.ObjectId,
    ref: "User",
    required: true,
  },
  name: { type: String, required: true },
  email: { type: String, required: true, trim: true },
  phone: { type: String, required: true, trim: true },
  summary: { type: String },
  experience: [ExperienceSchema],
  education: [EducationSchema],
  skills: [String],
  projects: [ProjectSchema],
  certifications: [CertificationSchema],
  createdAt: {
    type: Date,
    default: Date.now,
  },
});

export const Resume = mongoose.model("Resume", ResumeSchema);



D:\DATA\DEV\EAZY-REZUME\BACKEND\MODELS\USERMODEL.JS CODE IS BELOW
import mongoose from "mongoose";
import bcrypt from "bcryptjs";

const UserSchema = new mongoose.Schema({
  username: {
    type: String,
    required: [true, "Your username is required"],
    unique: true,
  },
  email: {
    type: String,
    required: [true, "Your email address is required"],
    unique: true,
   
  },
  password: {
    type: String,
    required: [true, "Your password is required"],
  },
  createdAt: {
    type: Date,
    default: new Date(),
  },
});

UserSchema.pre("save", async function () {
  this.password = await bcrypt.hash(this.password, 12);
});

export const User = mongoose.model("User", UserSchema);


D:\DATA\DEV\EAZY-REZUME\BACKEND\ROUTES\AUTHROUTE.JS CODE IS BELOW
import { Signup } from "../controllers/AuthContoller.js";
import { Router } from "express";

const router = Router();
router.post("/signup", Signup);

export default router;

D:\DATA\DEV\EAZY-REZUME\BACKEND\SERVER.JS CODE IS BELOW
import express from "express";
import mongoose from "mongoose";
import dotenv from "dotenv";
import { User } from "./models/UserModel.js";
import cors from "cors";
const app = express();
dotenv.config();
import cookieParser from "cookie-parser";
import authRoute from "./routes/AuthRoute.js";
const { MONGO_URL, PORT } = process.env;

mongoose
  .connect(MONGO_URL )
  .then(() => {
    console.log("Connected to MongoDB");
    app.listen(PORT, () => {
      console.log(`Server is running on port ${PORT}`);
    });
  })
  .catch((err) => {
    console.log("Error while connecting to MongoDB", err);
  });

app.use(
  cors({
    origin: ["http://localhost:3000"],
    methods: ["GET", "POST", "PUT", "DELETE"],
    credentials: true,
  })
);
app.use(cookieParser);
app.use(express.json());

app.use("/",authRoute)

/*app.get("/", async (req, res) => {
  console.log(res);
  return res.status(200).send("This is my resume Builder");
});
*/

// request to create a new resume
app.post("/register", async (req, res) => {
  try {
    if (!req.body.username || !req.body.email || !req.body.password) {
      return res
        .status(400)
        .send({ message: "username, email and password are required" });
    }
    const newUser = {
      username: req.body.username,
      email: req.body.email,
      password: req.body.password,
    };
    const user = await User.create(newUser);
    return res.status(200).send(user);
  } catch (error) {
    console.log(error.message);
    res.status(500).send({ messsage: error.message });
  }
});


D:\DATA\DEV\EAZY-REZUME\BACKEND\UTIL\SECRETTOKEN.JS CODE IS BELOW
import dotenv from "dotenv";
dotenv.config();
import jwt from "jsonwebtoken";

export const createSecretToken = (id) => {
  return jwt.sign({ id }, process.env.TOKEN_KEY, {
    expiresIn: 3 * 24 * 60 * 60,
  });
};


D:\DATA\DEV\EAZY-REZUME\CLIENT\INDEX.HTML CODE IS BELOW
<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/vite.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Vite + React</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


D:\DATA\DEV\EAZY-REZUME\CLIENT\SRC\APP.CSS CODE IS BELOW
#root {
  max-width: 1280px;
  margin: 0 auto;
  padding: 2rem;
  text-align: center;
}

.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
  transition: filter 300ms;
}
.logo:hover {
  filter: drop-shadow(0 0 2em #646cffaa);
}
.logo.react:hover {
  filter: drop-shadow(0 0 2em #61dafbaa);
}

@keyframes logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@media (prefers-reduced-motion: no-preference) {
  a:nth-of-type(2) .logo {
    animation: logo-spin infinite 20s linear;
  }
}

.card {
  padding: 2em;
}

.read-the-docs {
  color: #888;
}


D:\DATA\DEV\EAZY-REZUME\CLIENT\SRC\APP.JSX CODE IS BELOW

import './App.css'

function App() {
 

  return (
    <>
      <p>Hello</p>
    </>
  )
}

export default App


D:\DATA\DEV\EAZY-REZUME\CLIENT\SRC\INDEX.CSS CODE IS BELOW
:root {
  font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  color-scheme: light dark;
  color: rgba(255, 255, 255, 0.87);
  background-color: #242424;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

a {
  font-weight: 500;
  color: #646cff;
  text-decoration: inherit;
}
a:hover {
  color: #535bf2;
}

body {
  margin: 0;
  display: flex;
  place-items: center;
  min-width: 320px;
  min-height: 100vh;
}

h1 {
  font-size: 3.2em;
  line-height: 1.1;
}

button {
  border-radius: 8px;
  border: 1px solid transparent;
  padding: 0.6em 1.2em;
  font-size: 1em;
  font-weight: 500;
  font-family: inherit;
  background-color: #1a1a1a;
  cursor: pointer;
  transition: border-color 0.25s;
}
button:hover {
  border-color: #646cff;
}
button:focus,
button:focus-visible {
  outline: 4px auto -webkit-focus-ring-color;
}

@media (prefers-color-scheme: light) {
  :root {
    color: #213547;
    background-color: #ffffff;
  }
  a:hover {
    color: #747bff;
  }
  button {
    background-color: #f9f9f9;
  }
}


D:\DATA\DEV\EAZY-REZUME\CLIENT\SRC\MAIN.JSX CODE IS BELOW
import React from 'react'
import ReactDOM from 'react-dom/client'
import App from './App.jsx'
import './index.css'

ReactDOM.createRoot(document.getElementById('root')).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>,
)

