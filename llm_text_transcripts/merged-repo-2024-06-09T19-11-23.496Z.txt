
D:\DATA\EAZY-REZUME\CLIENT\SRC\APP.JSX CODE IS BELOW
import { Route, Routes } from "react-router-dom";
import Login from "./components/auth/Login";
import Register from "./components/auth/Register";
import ProfileCreation from "./components/Profile/ProfileCreation";

import "./App.css";

function App() {
  return (
    <Routes>
      
        <Route path="/login" element={<Login />} />
        <Route path="/register" element={<Register />} />
        <Route path="/profile/create" element={<ProfileCreation />} />
      
    </Routes>
  );
}

export default App;


D:\DATA\EAZY-REZUME\CLIENT\SRC\COMPONENTS\PROFILE\PROFILECREATION.JSX CODE IS BELOW
import { useDispatch, useSelector } from "react-redux";
import React, { useState } from "react";
import { saveProfileData } from "../../redux/actions/profileActions";
import PersonalInfo from "./steps/PersonalInfo";
import Education from "./steps/Education";
import Experience from "./steps/Experience";
import Skills from "./steps/Skills";
import Projects from "./steps/Projects";
import {
  Stepper,
  Step,
  StepLabel,
  Button,
  Box,
  Typography,
} from "@mui/material";

const steps = [
  "Personal Information",
  "Education",
  "Experience",
  "Skills",
  "Projects",
];

const ProfileCreation = () => {
  const [activeStep, setActiveStep] = useState(0);
  const dispatch = useDispatch();
  const profileData = useSelector((state) => state.profile);

  const handleNext = () => {
    if (activeStep === steps.length - 1) {
      dispatch(saveProfileData(profileData));
    } else {
      setActiveStep((prevActiveStep) => prevActiveStep + 1);
    }
  };

  const handleBack = () => {
    setActiveStep((prevActiveStep) => prevActiveStep - 1);
  };
  const handleReset = () => {
    setActiveStep(0);
  };
  const getStepContent = (step) => {
    switch (step) {
      case 0:
        return <PersonalInfo />;
      case 1:
        return <Education />;
      case 2:
        return <Experience />;
      case 3:
        return <Skills />;
      case 4:
        return <Projects />;
      default:
        return "Unknown step";
    }
  };

  return (
    <Box sx={{ width: "100%" }}>
      <Stepper activeStep={activeStep}>
        {steps.map((label, index) => (
          <Step key={index}>
            <StepLabel>{label}</StepLabel>
          </Step>
        ))}
      </Stepper>
      <Box sx={{ mt: 2, mb: 2 }}>
        {activeStep === steps.length ? (
          <React.Fragment>
            <Typography sx={{ mt: 2, mb: 2 }}>
              All steps completed - your profile is saved!
            </Typography>
            <Button onClick={handleReset}>Reset</Button>
          </React.Fragment>
        ) : (
          <React.Fragment>
            {getStepContent(activeStep)}
            <Box sx={{ display: "flex", flexDirection: "row", pt: 2 }}>
              <Button
                color="inherit"
                disabled={activeStep === 0}
                onClick={handleBack}
                sx={{ mr: 1 }}
              >
                Back
              </Button>
              <Box sx={{ flex: "1 1 auto" }} />
              <Button onClick={handleNext}>
                {activeStep === steps.length - 1 ? "Finish" : "Next"}
              </Button>
            </Box>
          </React.Fragment>
        )}
      </Box>
    </Box>
  );
};

export default ProfileCreation;


D:\DATA\EAZY-REZUME\CLIENT\SRC\COMPONENTS\PROFILE\STEPS\EDUCATION.JSX CODE IS BELOW
import { useDispatch, useSelector } from "react-redux";
import { updateProfileField } from "../../../redux/actions/profileActions";

const Education = () => {
  const dispatch = useDispatch();
  const education = useSelector((state) => state.profile.education);

  const handleChange = (e) => {
    const { name, value } = e.target;
    dispatch(
      updateProfileField("education", {
        [name]: value,
      })
    );
  };

  return (
    <div>
      <h3>Education</h3>
      <input
        type="text"
        name="institution"
        value={education?.institution || ""}
        onChange={handleChange}
        placeholder="Institution"
      />
      <input
        type="text"
        name="degree"
        value={education?.degree || ""}
        onChange={handleChange}
        placeholder="Degree"
      />
      <input
        type="date"
        name="startDate"
        value={education?.startDate || ""}
        onChange={handleChange}
        placeholder="Start date"
      />
      <input
        type="date"
        name="endDate"
        value={education?.endDate || ""}
        onChange={handleChange}
        placeholder="End date"
      />
      <input
        type="text"
        name="description"
        value={education?.description || ""}
        onChange={handleChange}
        placeholder="Description"
      />
    </div>
  );
};

export default Education;


D:\DATA\EAZY-REZUME\CLIENT\SRC\COMPONENTS\PROFILE\STEPS\EXPERIENCE.JSX CODE IS BELOW
import { useDispatch, useSelector } from "react-redux";
import { updateProfileField } from "../../../redux/actions/profileActions";

const Experience = () => {
  const dispatch = useDispatch();
  const experience = useSelector((state) => state.profile.Experience);

  const handleChange = (e) => {
    const { name, value } = e.target;
    dispatch(
      updateProfileField("experience", {
        [name]: value,
      })
    );
  };

  return (
    <div>
      <h3>Experience</h3>
      <input
        type="text"
        name="company"
        value={experience?.company || ""}
        onChange={handleChange}
        placeholder="Company"
      />
      <input
        type="text"
        name="position"
        value={experience?.position || ""}
        onChange={handleChange}
        placeholder="Position"
      />
      <input
        type="date"
        name="startDate"
        value={experience?.startDate || ""}
        onChange={handleChange}
        placeholder="Start date"
      />
      <input
        type="date"
        name="endDate"
        value={experience?.endDate || ""}
        onChange={handleChange}
        placeholder="End date"
      />
      <input
        type="text"
        name="description"
        value={experience?.description || ""}
        onChange={handleChange}
        placeholder="Description"
      />
    </div>
  );
};

export default Experience;


D:\DATA\EAZY-REZUME\CLIENT\SRC\COMPONENTS\PROFILE\STEPS\PERSONALINFO.JSX CODE IS BELOW
import { useDispatch, useSelector } from "react-redux";
import { updateProfileField } from "../../../redux/actions/profileActions";

const PersonalInfo = () => {
  const dispatch = useDispatch();
  const personalInfo = useSelector((state) => state.profile.personalInfo);

  const handleChange = (e) => {
    const { name, value } = e.target;
    dispatch(
      updateProfileField({
        ...personalInfo,
        [name]: value,
      })
    );
  };

  return (
    <div>
      <h3>Personal Information</h3>
      <input
        type="text"
        name="name"
        value={personalInfo?.name || ""}
        onChange={handleChange}
        placeholder="Name"
      />
      <input
        type="text"
        name="email"
        value={personalInfo?.email || ""}
        onChange={handleChange}
        placeholder="Email"
      />
      <input
        type="text"
        name="phone"
        value={personalInfo?.phone || ""}
        onChange={handleChange}
        placeholder="Phone"
      />
      <input
        type="text"
        name="address"
        value={personalInfo?.address || ""}
        onChange={handleChange}
        placeholder="Address"
      />
    </div>
  );
};

export default PersonalInfo;


D:\DATA\EAZY-REZUME\CLIENT\SRC\COMPONENTS\PROFILE\STEPS\PROJECTS.JSX CODE IS BELOW
import { useDispatch, useSelector } from "react-redux";
import { updateProfileField } from "../../../redux/actions/profileActions";

const Projects = () => {
  const dispatch = useDispatch();
  const projects = useSelector((state) => state.profile.projects);

  const handleChange = (e) => {
    const { name, value } = e.target;
    dispatch(
      updateProfileField("projects", {
        [name]: value,
      })
    );
  };

  return (
    <div>
      <h3>Personal Information</h3>
      <input
        type="text"
        name="name"
        value={projects?.name || ""}
        onChange={handleChange}
        placeholder="Name"
      />

      <input
        type="text"
        name="description"
        value={projects?.description || ""}
        onChange={handleChange}
        placeholder="Description"
      />

      <input
        type="text"
        name="link"
        value={projects?.link || ""}
        onChange={handleChange}
        placeholder="link"
      />
    </div>
  );
};

export default Projects;


D:\DATA\EAZY-REZUME\CLIENT\SRC\COMPONENTS\PROFILE\STEPS\SKILLS.JSX CODE IS BELOW
import { useDispatch, useSelector } from "react-redux";
import { updateProfileField } from "../../../redux/actions/profileActions";

const Skills = () => {
  const dispatch = useDispatch();
  const skills = useSelector((state) => state.profile.skills);

  const handleChange = (e) => {
    const { name, value } = e.target;
    dispatch(
      updateProfileField("skills", {
        [name]: value,
      })
    );
  };

  return (
    <div>
      <h3>Skills</h3>
      <input
        type="text"
        name="skill"
        value={skills?.skill || ""}
        onChange={handleChange}
        placeholder="Skill"
      />
    </div>
  );
};

export default Skills;


D:\DATA\EAZY-REZUME\CLIENT\SRC\INDEX.CSS CODE IS BELOW
@import url("https://fonts.googleapis.com/css2?family=Montserrat:wght@100;200;300;400;500;600;700;800;900&family=Palanquin:wght@100;200;300;400;500;600;700&display=swap");
  @tailwind base;
@tailwind components;
@tailwind utilities;


D:\DATA\EAZY-REZUME\CLIENT\SRC\MAIN.JSX CODE IS BELOW
import ReactDOM from "react-dom/client";
import App from "./App.jsx";
import "./index.css";
import { BrowserRouter } from "react-router-dom";
import { ToastContainer } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";
import { Provider } from "react-redux";
import store from "./redux/store"; // Your Redux store

ReactDOM.createRoot(document.getElementById("root")).render(
  <Provider store={store}>
    <BrowserRouter>
      <App />
      <ToastContainer />
    </BrowserRouter>
  </Provider>
);


D:\DATA\EAZY-REZUME\CLIENT\SRC\REDUX\ACTIONS\PROFILEACTIONS.JS CODE IS BELOW
import { UPDATE_PROFILE_FIELD, SAVE_PROFILE_DATA } from "./types";
import axios from "axios";
import { toast } from "react-toastify";

export const updateProfileField = (section,fieldData) => ({
  type: UPDATE_PROFILE_FIELD,
  payload: fieldData,
});

export const saveProfileData = (profileData) => async (dispatch) => {
  try {
    const response = await axios.post("http://localhost:5000/api/profile", profileData);
    dispatch({
      type: SAVE_PROFILE_DATA,
      payload: response.data,
    });
    toast.success("Profile saved successfully!");
  } catch (error) {
    console.error("Error saving profile data:", error);
    toast.error("Failed to save profile!");
  }
};

D:\DATA\EAZY-REZUME\CLIENT\SRC\REDUX\ACTIONS\TYPES.JS CODE IS BELOW
export const LOGIN_USER = "LOGIN_USER";
export const REGISTER_USER = "REGISTER_USER";
export const LOGIN_FAILURE = "LOGIN_FAILURE";
export const REGISTER_FAILURE = "REGISTER_FAILURE";
export const UPDATE_PROFILE_FIELD = "UPDATE_PROFILE_FIELD";
export const SAVE_PROFILE_DATA = "SAVE_PROFILE_DATA";


D:\DATA\EAZY-REZUME\CLIENT\SRC\REDUX\REDUCERS\PROFILEREDUCER.JS CODE IS BELOW
import { UPDATE_PROFILE_FIELD, SAVE_PROFILE_DATA } from "../actions/types";

const initialState = {
  personalInfo: {
    name: "",
    email: "",
    phone: "",
    address: "",
    
  },
  education: {
    institution: "",
    degree: "",
    startDate: "",
    endDate: "",
    description: "",
  },
  experience: {
    company: "",
    position: "",
    startDate: "",
    endDate: "",
    description: "",
  },
  skills: {
    skill: "",
  },
  projects: {
    name: "",
    description: "",
    link: "",
  },
};

const profileReducer = (state = initialState, action) => {
  switch (action.type) {
    case UPDATE_PROFILE_FIELD:
      return {
        ...state,
        [action.section]:{
          ...state[action.section],
          ...action.payload,
        },
        
      };
    case SAVE_PROFILE_DATA:
      return {
        ...state,
        ...action.payload,
      };
    default:
      return state;
  }
};

export default profileReducer;

D:\DATA\EAZY-REZUME\CLIENT\SRC\REDUX\REDUCERS\ROOTREDUCER.JS CODE IS BELOW
// src/redux/reducers/rootReducer.js

import { combineReducers } from "redux";
import authReducer from "./authReducer.js";
import profileReducer from "./profileReducer.js";

export default combineReducers({
  auth: authReducer,
  profile: profileReducer,
});


D:\DATA\EAZY-REZUME\CLIENT\SRC\REDUX\STORE.JS CODE IS BELOW


import { configureStore } from '@reduxjs/toolkit';
import rootReducer from '../redux/reducers/rootReducer.js';

const store = configureStore({
  reducer: rootReducer,
});

export default store;

